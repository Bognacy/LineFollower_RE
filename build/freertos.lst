ARM GAS  C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/freertos.c"
  20              		.section	.text.StartDefaultTask,"ax",%progbits
  21              		.align	1
  22              		.global	StartDefaultTask
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	StartDefaultTask:
  28              	.LFB224:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** //#include "driver.c"
  29:Core/Src/freertos.c **** #include "comm.c"
  30:Core/Src/freertos.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s 			page 2


  31:Core/Src/freertos.c **** 
  32:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* USER CODE END PTD */
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* USER CODE END PD */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* USER CODE END PM */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* USER CODE END Variables */
  51:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  52:Core/Src/freertos.c **** osSemaphoreId CommSemaphoreHandle;
  53:Core/Src/freertos.c **** 
  54:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  56:Core/Src/freertos.c **** 
  57:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  62:Core/Src/freertos.c **** 
  63:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  64:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  65:Core/Src/freertos.c **** 
  66:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  67:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  68:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  71:Core/Src/freertos.c **** {
  72:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  73:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  74:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  75:Core/Src/freertos.c ****   /* place for user code */
  76:Core/Src/freertos.c **** }
  77:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  78:Core/Src/freertos.c **** 
  79:Core/Src/freertos.c **** /**
  80:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  81:Core/Src/freertos.c ****   * @param  None
  82:Core/Src/freertos.c ****   * @retval None
  83:Core/Src/freertos.c ****   */
  84:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  85:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  86:Core/Src/freertos.c **** 
  87:Core/Src/freertos.c ****   /* USER CODE END Init */
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s 			page 3


  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  90:Core/Src/freertos.c ****   /* add mutexes, ... */
  91:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  92:Core/Src/freertos.c **** 
  93:Core/Src/freertos.c ****   /* Create the semaphores(s) */
  94:Core/Src/freertos.c ****   /* definition and creation of CommSemaphore */
  95:Core/Src/freertos.c ****   osSemaphoreDef(CommSemaphore);
  96:Core/Src/freertos.c ****   CommSemaphoreHandle = osSemaphoreCreate(osSemaphore(CommSemaphore), 1);
  97:Core/Src/freertos.c **** 
  98:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  99:Core/Src/freertos.c ****   /* add semaphores, ... */
 100:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 103:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 104:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 105:Core/Src/freertos.c **** 
 106:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 107:Core/Src/freertos.c ****   /* add queues, ... */
 108:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c ****   /* Create the thread(s) */
 111:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 112:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 113:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 114:Core/Src/freertos.c **** 
 115:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 116:Core/Src/freertos.c ****   /* add threads, ... */
 117:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 118:Core/Src/freertos.c **** 
 119:Core/Src/freertos.c **** }
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 122:Core/Src/freertos.c **** /**
 123:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 124:Core/Src/freertos.c ****   * @param  argument: Not used
 125:Core/Src/freertos.c ****   * @retval None
 126:Core/Src/freertos.c ****   */
 127:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 128:Core/Src/freertos.c **** void StartDefaultTask(void const * argument)
 129:Core/Src/freertos.c **** {
  29              		.loc 1 129 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35              		.loc 1 129 1 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
  41              	.LVL1:
  42              	.L2:
 130:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s 			page 4


 131:Core/Src/freertos.c ****   /* Infinite loop */
 132:Core/Src/freertos.c ****   for(;;)
  43              		.loc 1 132 3 is_stmt 1 discriminator 1 view .LVU2
 133:Core/Src/freertos.c ****   {
 134:Core/Src/freertos.c ****     HAL_GPIO_WritePin(LED_CTR_GPIO_Port, LED_CTR_Pin, GPIO_PIN_SET);
  44              		.loc 1 134 5 discriminator 1 view .LVU3
  45 0002 074C     		ldr	r4, .L4
  46 0004 0122     		movs	r2, #1
  47 0006 4FF40051 		mov	r1, #8192
  48 000a 2046     		mov	r0, r4
  49 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
  50              	.LVL2:
 135:Core/Src/freertos.c ****     HAL_GPIO_WritePin(GPIOC,GPIO_PIN_10, GPIO_PIN_SET);
  51              		.loc 1 135 5 discriminator 1 view .LVU4
  52 0010 0122     		movs	r2, #1
  53 0012 4FF48061 		mov	r1, #1024
  54 0016 2046     		mov	r0, r4
  55 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
  56              	.LVL3:
 132:Core/Src/freertos.c ****   {
  57              		.loc 1 132 3 discriminator 1 view .LVU5
  58 001c F1E7     		b	.L2
  59              	.L5:
  60 001e 00BF     		.align	2
  61              	.L4:
  62 0020 00080240 		.word	1073874944
  63              		.cfi_endproc
  64              	.LFE224:
  66              		.section	.text.ExStartCommTask,"ax",%progbits
  67              		.align	1
  68              		.global	ExStartCommTask
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	ExStartCommTask:
  74              	.LFB221:
  75              		.file 2 "Core/Src/comm.c"
   1:Core/Src/comm.c **** #include "FreeRTOS.h"
   2:Core/Src/comm.c **** #include "task.h"
   3:Core/Src/comm.c **** #include "main.h"
   4:Core/Src/comm.c **** #include "cmsis_os.h"
   5:Core/Src/comm.c **** #include "usart.h"
   6:Core/Src/comm.c **** #include <string.h>
   7:Core/Src/comm.c **** 
   8:Core/Src/comm.c **** 
   9:Core/Src/comm.c **** 
  10:Core/Src/comm.c **** #define MSIZE 4
  11:Core/Src/comm.c **** 
  12:Core/Src/comm.c ****   //extern bool isWhite[SENSOR_NUMBER];
  13:Core/Src/comm.c ****   //extern int readings[SENSOR_NUMBER];
  14:Core/Src/comm.c ****   extern UART_HandleTypeDef huart6;
  15:Core/Src/comm.c ****   //bool test1, test2;
  16:Core/Src/comm.c ****   enum mode{turnLeft, turnRight, adc, stop, start};
  17:Core/Src/comm.c ****   uint8_t mess[MSIZE]= {0,0,0,0};
  18:Core/Src/comm.c **** 
  19:Core/Src/comm.c ****   void sendMess(enum mode m, uint32_t value);  
  20:Core/Src/comm.c **** 
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s 			page 5


  21:Core/Src/comm.c ****   void ExStartCommTask(void const * argument){
  76              		.loc 2 21 46 view -0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              	.LVL4:
  82              		.loc 2 21 46 is_stmt 0 view .LVU7
  83 0000 08B5     		push	{r3, lr}
  84              	.LCFI1:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 3, -8
  87              		.cfi_offset 14, -4
  88              	.LVL5:
  89              	.L7:
  22:Core/Src/comm.c **** 
  23:Core/Src/comm.c ****   //HAL_UART_Transmit(&huart6, mess, MSIZE, 1000);
  24:Core/Src/comm.c ****   for(;;) {
  90              		.loc 2 24 3 is_stmt 1 discriminator 1 view .LVU8
  25:Core/Src/comm.c ****     //test1 = isWhite[0];
  26:Core/Src/comm.c ****     //test2 = isWhite[1];
  27:Core/Src/comm.c ****     //HAL_UART_Transmit(&huart6, mess, MSIZE, 1000);
  28:Core/Src/comm.c ****     //sendMess(adc, 19);
  29:Core/Src/comm.c **** 
  30:Core/Src/comm.c ****     //sendMess(stop, 0);
  31:Core/Src/comm.c ****     //HAL_UART_Receive(&huart6,buffer, sizeof(buffer),100);
  32:Core/Src/comm.c ****     HAL_GPIO_TogglePin(LED_CTR_GPIO_Port, LED_CTR_Pin);
  91              		.loc 2 32 5 discriminator 1 view .LVU9
  92 0002 4FF40051 		mov	r1, #8192
  93 0006 0448     		ldr	r0, .L9
  94 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  95              	.LVL6:
  33:Core/Src/comm.c ****     osDelay(500);
  96              		.loc 2 33 5 discriminator 1 view .LVU10
  97 000c 4FF4FA70 		mov	r0, #500
  98 0010 FFF7FEFF 		bl	osDelay
  99              	.LVL7:
  24:Core/Src/comm.c ****     //test1 = isWhite[0];
 100              		.loc 2 24 3 discriminator 1 view .LVU11
 101 0014 F5E7     		b	.L7
 102              	.L10:
 103 0016 00BF     		.align	2
 104              	.L9:
 105 0018 00080240 		.word	1073874944
 106              		.cfi_endproc
 107              	.LFE221:
 109              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 110              		.align	1
 111              		.global	vApplicationGetIdleTaskMemory
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 116              	vApplicationGetIdleTaskMemory:
 117              	.LVL8:
 118              	.LFB222:
  71:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 119              		.loc 1 71 1 view -0
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s 			page 6


 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
  72:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 124              		.loc 1 72 3 view .LVU13
  72:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 125              		.loc 1 72 25 is_stmt 0 view .LVU14
 126 0000 034B     		ldr	r3, .L12
 127 0002 0360     		str	r3, [r0]
  73:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 128              		.loc 1 73 3 is_stmt 1 view .LVU15
  73:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 129              		.loc 1 73 27 is_stmt 0 view .LVU16
 130 0004 034B     		ldr	r3, .L12+4
 131 0006 0B60     		str	r3, [r1]
  74:Core/Src/freertos.c ****   /* place for user code */
 132              		.loc 1 74 3 is_stmt 1 view .LVU17
  74:Core/Src/freertos.c ****   /* place for user code */
 133              		.loc 1 74 25 is_stmt 0 view .LVU18
 134 0008 8023     		movs	r3, #128
 135 000a 1360     		str	r3, [r2]
  76:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 136              		.loc 1 76 1 view .LVU19
 137 000c 7047     		bx	lr
 138              	.L13:
 139 000e 00BF     		.align	2
 140              	.L12:
 141 0010 00000000 		.word	xIdleTaskTCBBuffer
 142 0014 00000000 		.word	xIdleStack
 143              		.cfi_endproc
 144              	.LFE222:
 146              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 147              		.align	1
 148              		.global	MX_FREERTOS_Init
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 153              	MX_FREERTOS_Init:
 154              	.LFB223:
  84:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 155              		.loc 1 84 29 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 40
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 30B5     		push	{r4, r5, lr}
 160              	.LCFI2:
 161              		.cfi_def_cfa_offset 12
 162              		.cfi_offset 4, -12
 163              		.cfi_offset 5, -8
 164              		.cfi_offset 14, -4
 165 0002 8BB0     		sub	sp, sp, #44
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 56
  95:Core/Src/freertos.c ****   CommSemaphoreHandle = osSemaphoreCreate(osSemaphore(CommSemaphore), 1);
 168              		.loc 1 95 3 view .LVU21
 169 0004 0025     		movs	r5, #0
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s 			page 7


 170 0006 0895     		str	r5, [sp, #32]
 171 0008 0995     		str	r5, [sp, #36]
  96:Core/Src/freertos.c **** 
 172              		.loc 1 96 3 view .LVU22
  96:Core/Src/freertos.c **** 
 173              		.loc 1 96 25 is_stmt 0 view .LVU23
 174 000a 0121     		movs	r1, #1
 175 000c 08A8     		add	r0, sp, #32
 176 000e FFF7FEFF 		bl	osSemaphoreCreate
 177              	.LVL9:
  96:Core/Src/freertos.c **** 
 178              		.loc 1 96 23 view .LVU24
 179 0012 0A4B     		ldr	r3, .L16
 180 0014 1860     		str	r0, [r3]
 112:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 181              		.loc 1 112 3 is_stmt 1 view .LVU25
 182 0016 0DF1040C 		add	ip, sp, #4
 183 001a 094C     		ldr	r4, .L16+4
 184 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 185 001e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 186 0022 94E80700 		ldm	r4, {r0, r1, r2}
 187 0026 8CE80700 		stm	ip, {r0, r1, r2}
 113:Core/Src/freertos.c **** 
 188              		.loc 1 113 3 view .LVU26
 113:Core/Src/freertos.c **** 
 189              		.loc 1 113 23 is_stmt 0 view .LVU27
 190 002a 2946     		mov	r1, r5
 191 002c 01A8     		add	r0, sp, #4
 192 002e FFF7FEFF 		bl	osThreadCreate
 193              	.LVL10:
 113:Core/Src/freertos.c **** 
 194              		.loc 1 113 21 view .LVU28
 195 0032 044B     		ldr	r3, .L16+8
 196 0034 1860     		str	r0, [r3]
 119:Core/Src/freertos.c **** 
 197              		.loc 1 119 1 view .LVU29
 198 0036 0BB0     		add	sp, sp, #44
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 12
 201              		@ sp needed
 202 0038 30BD     		pop	{r4, r5, pc}
 203              	.L17:
 204 003a 00BF     		.align	2
 205              	.L16:
 206 003c 00000000 		.word	CommSemaphoreHandle
 207 0040 00000000 		.word	.LANCHOR0
 208 0044 00000000 		.word	defaultTaskHandle
 209              		.cfi_endproc
 210              	.LFE223:
 212              		.section	.rodata.str1.4,"aMS",%progbits,1
 213              		.align	2
 214              	.LC0:
 215 0000 64656661 		.ascii	"defaultTask\000"
 215      756C7454 
 215      61736B00 
 216              		.section	.bss.xIdleStack,"aw",%nobits
 217              		.align	2
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s 			page 8


 220              	xIdleStack:
 221 0000 00000000 		.space	512
 221      00000000 
 221      00000000 
 221      00000000 
 221      00000000 
 222              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 223              		.align	2
 226              	xIdleTaskTCBBuffer:
 227 0000 00000000 		.space	84
 227      00000000 
 227      00000000 
 227      00000000 
 227      00000000 
 228              		.global	CommSemaphoreHandle
 229              		.section	.bss.CommSemaphoreHandle,"aw",%nobits
 230              		.align	2
 233              	CommSemaphoreHandle:
 234 0000 00000000 		.space	4
 235              		.global	defaultTaskHandle
 236              		.section	.bss.defaultTaskHandle,"aw",%nobits
 237              		.align	2
 240              	defaultTaskHandle:
 241 0000 00000000 		.space	4
 242              		.global	mess
 243              		.section	.bss.mess,"aw",%nobits
 244              		.align	2
 247              	mess:
 248 0000 00000000 		.space	4
 249              		.section	.rodata
 250              		.align	2
 251              		.set	.LANCHOR0,. + 0
 252              	.LC2:
 253 0000 00000000 		.word	.LC0
 254 0004 00000000 		.word	StartDefaultTask
 255 0008 0000     		.short	0
 256 000a 0000     		.space	2
 257 000c 00000000 		.word	0
 258 0010 80000000 		.word	128
 259 0014 00000000 		.word	0
 260 0018 00000000 		.word	0
 261              		.text
 262              	.Letext0:
 263              		.file 3 "c:\\program files\\arm-gnu-toolchain-12.2.mpacbti-rel1-mingw-w64-i686-arm-none-eabi\\arm-
 264              		.file 4 "c:\\program files\\arm-gnu-toolchain-12.2.mpacbti-rel1-mingw-w64-i686-arm-none-eabi\\arm-
 265              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 266              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 267              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 268              		.file 8 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 269              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 270              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 271              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 272              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:21     .text.StartDefaultTask:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:27     .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:62     .text.StartDefaultTask:00000020 $d
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:67     .text.ExStartCommTask:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:73     .text.ExStartCommTask:00000000 ExStartCommTask
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:105    .text.ExStartCommTask:00000018 $d
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:110    .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:116    .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:141    .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:226    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:220    .bss.xIdleStack:00000000 xIdleStack
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:147    .text.MX_FREERTOS_Init:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:153    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:206    .text.MX_FREERTOS_Init:0000003c $d
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:233    .bss.CommSemaphoreHandle:00000000 CommSemaphoreHandle
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:240    .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:213    .rodata.str1.4:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:217    .bss.xIdleStack:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:223    .bss.xIdleTaskTCBBuffer:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:230    .bss.CommSemaphoreHandle:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:237    .bss.defaultTaskHandle:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:247    .bss.mess:00000000 mess
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:244    .bss.mess:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\cc7YiR5f.s:250    .rodata:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_TogglePin
osDelay
osSemaphoreCreate
osThreadCreate
