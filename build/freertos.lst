ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/freertos.c"
  20              		.section	.text.StartDefaultTask,"ax",%progbits
  21              		.align	1
  22              		.global	StartDefaultTask
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	StartDefaultTask:
  28              	.LFB223:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** //#include "driver.c"
  29:Core/Src/freertos.c **** //#include "comm.h"
  30:Core/Src/freertos.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 2


  31:Core/Src/freertos.c **** 
  32:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* USER CODE END PTD */
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* USER CODE END PD */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* USER CODE END PM */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* USER CODE END Variables */
  51:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  52:Core/Src/freertos.c **** osThreadId CommTaskHandle;
  53:Core/Src/freertos.c **** osThreadId DriveTaskHandle;
  54:Core/Src/freertos.c **** osSemaphoreId CommSemaphoreHandle;
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  58:Core/Src/freertos.c **** 
  59:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** void StartDefaultTask(void const * argument);
  62:Core/Src/freertos.c **** void StartCommTask(void const * argument);
  63:Core/Src/freertos.c **** void StartDriveTask(void const * argument);
  64:Core/Src/freertos.c **** 
  65:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  66:Core/Src/freertos.c **** 
  67:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  68:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  69:Core/Src/freertos.c **** 
  70:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  71:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  72:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  73:Core/Src/freertos.c **** 
  74:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  75:Core/Src/freertos.c **** {
  76:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  77:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  78:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  79:Core/Src/freertos.c ****   /* place for user code */
  80:Core/Src/freertos.c **** }
  81:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  82:Core/Src/freertos.c **** 
  83:Core/Src/freertos.c **** /**
  84:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  85:Core/Src/freertos.c ****   * @param  None
  86:Core/Src/freertos.c ****   * @retval None
  87:Core/Src/freertos.c ****   */
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 3


  88:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  89:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/freertos.c **** 
  91:Core/Src/freertos.c ****   /* USER CODE END Init */
  92:Core/Src/freertos.c **** 
  93:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  94:Core/Src/freertos.c ****   /* add mutexes, ... */
  95:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  96:Core/Src/freertos.c **** 
  97:Core/Src/freertos.c ****   /* Create the semaphores(s) */
  98:Core/Src/freertos.c ****   /* definition and creation of CommSemaphore */
  99:Core/Src/freertos.c ****   osSemaphoreDef(CommSemaphore);
 100:Core/Src/freertos.c ****   CommSemaphoreHandle = osSemaphoreCreate(osSemaphore(CommSemaphore), 1);
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 103:Core/Src/freertos.c ****   /* add semaphores, ... */
 104:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 105:Core/Src/freertos.c **** 
 106:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 107:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 108:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 111:Core/Src/freertos.c ****   /* add queues, ... */
 112:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 113:Core/Src/freertos.c **** 
 114:Core/Src/freertos.c ****   /* Create the thread(s) */
 115:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 116:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 117:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 118:Core/Src/freertos.c **** 
 119:Core/Src/freertos.c ****   /* definition and creation of CommTask */
 120:Core/Src/freertos.c ****   osThreadDef(CommTask, StartCommTask, osPriorityIdle, 0, 128);
 121:Core/Src/freertos.c ****   CommTaskHandle = osThreadCreate(osThread(CommTask), NULL);
 122:Core/Src/freertos.c **** 
 123:Core/Src/freertos.c ****   /* definition and creation of DriveTask */
 124:Core/Src/freertos.c ****   osThreadDef(DriveTask, StartDriveTask, osPriorityIdle, 0, 128);
 125:Core/Src/freertos.c ****   DriveTaskHandle = osThreadCreate(osThread(DriveTask), NULL);
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 128:Core/Src/freertos.c ****   /* add threads, ... */
 129:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 130:Core/Src/freertos.c **** 
 131:Core/Src/freertos.c **** }
 132:Core/Src/freertos.c **** 
 133:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 134:Core/Src/freertos.c **** /**
 135:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 136:Core/Src/freertos.c ****   * @param  argument: Not used
 137:Core/Src/freertos.c ****   * @retval None
 138:Core/Src/freertos.c ****   */
 139:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 140:Core/Src/freertos.c **** void StartDefaultTask(void const * argument)
 141:Core/Src/freertos.c **** {
  29              		.loc 1 141 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 4


  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35              		.loc 1 141 1 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
  41              	.LVL1:
  42              	.L2:
 142:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 143:Core/Src/freertos.c **** 
 144:Core/Src/freertos.c ****   /* Infinite loop */
 145:Core/Src/freertos.c ****   for(;;)
  43              		.loc 1 145 3 is_stmt 1 discriminator 1 view .LVU2
 146:Core/Src/freertos.c ****   {
 147:Core/Src/freertos.c ****     osDelay(1);
  44              		.loc 1 147 5 discriminator 1 view .LVU3
  45 0002 0120     		movs	r0, #1
  46 0004 FFF7FEFF 		bl	osDelay
  47              	.LVL2:
 145:Core/Src/freertos.c ****   {
  48              		.loc 1 145 3 discriminator 1 view .LVU4
  49 0008 FBE7     		b	.L2
  50              		.cfi_endproc
  51              	.LFE223:
  53              		.section	.text.StartCommTask,"ax",%progbits
  54              		.align	1
  55              		.global	StartCommTask
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  60              	StartCommTask:
  61              	.LVL3:
  62              	.LFB224:
 148:Core/Src/freertos.c ****   }
 149:Core/Src/freertos.c ****   /* USER CODE END StartDefaultTask */
 150:Core/Src/freertos.c **** }
 151:Core/Src/freertos.c **** 
 152:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartCommTask */
 153:Core/Src/freertos.c **** /**
 154:Core/Src/freertos.c **** * @brief Function implementing the CommTask thread.
 155:Core/Src/freertos.c **** * @param argument: Not used
 156:Core/Src/freertos.c **** * @retval None
 157:Core/Src/freertos.c **** */
 158:Core/Src/freertos.c **** /* USER CODE END Header_StartCommTask */
 159:Core/Src/freertos.c **** void StartCommTask(void const * argument)
 160:Core/Src/freertos.c **** {
  63              		.loc 1 160 1 view -0
  64              		.cfi_startproc
  65              		@ Volatile: function does not return.
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		.loc 1 160 1 is_stmt 0 view .LVU6
  69 0000 08B5     		push	{r3, lr}
  70              	.LCFI1:
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 5


  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 3, -8
  73              		.cfi_offset 14, -4
 161:Core/Src/freertos.c ****   /* USER CODE BEGIN StartCommTask */
 162:Core/Src/freertos.c ****   /* Infinite loop */
 163:Core/Src/freertos.c ****   ExStartCommTask(argument);
  74              		.loc 1 163 3 is_stmt 1 view .LVU7
  75 0002 FFF7FEFF 		bl	ExStartCommTask
  76              	.LVL4:
  77              	.L5:
 164:Core/Src/freertos.c ****   for(;;)
  78              		.loc 1 164 3 discriminator 1 view .LVU8
 165:Core/Src/freertos.c ****   {
 166:Core/Src/freertos.c ****     osDelay(1);
  79              		.loc 1 166 5 discriminator 1 view .LVU9
  80 0006 0120     		movs	r0, #1
  81 0008 FFF7FEFF 		bl	osDelay
  82              	.LVL5:
 164:Core/Src/freertos.c ****   for(;;)
  83              		.loc 1 164 3 discriminator 1 view .LVU10
  84 000c FBE7     		b	.L5
  85              		.cfi_endproc
  86              	.LFE224:
  88              		.section	.text.StartDriveTask,"ax",%progbits
  89              		.align	1
  90              		.global	StartDriveTask
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	StartDriveTask:
  96              	.LVL6:
  97              	.LFB225:
 167:Core/Src/freertos.c ****   }
 168:Core/Src/freertos.c ****   /* USER CODE END StartCommTask */
 169:Core/Src/freertos.c **** }
 170:Core/Src/freertos.c **** 
 171:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDriveTask */
 172:Core/Src/freertos.c **** /**
 173:Core/Src/freertos.c **** * @brief Function implementing the DriveTask thread.
 174:Core/Src/freertos.c **** * @param argument: Not used
 175:Core/Src/freertos.c **** * @retval None
 176:Core/Src/freertos.c **** */
 177:Core/Src/freertos.c **** /* USER CODE END Header_StartDriveTask */
 178:Core/Src/freertos.c **** void StartDriveTask(void const * argument)
 179:Core/Src/freertos.c **** {
  98              		.loc 1 179 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		.loc 1 179 1 is_stmt 0 view .LVU12
 104 0000 08B5     		push	{r3, lr}
 105              	.LCFI2:
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 3, -8
 108              		.cfi_offset 14, -4
 180:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDriveTask */
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 6


 181:Core/Src/freertos.c ****   /* Infinite loop */
 182:Core/Src/freertos.c ****   ExStartDriveTask(argument);
 109              		.loc 1 182 3 is_stmt 1 view .LVU13
 110 0002 FFF7FEFF 		bl	ExStartDriveTask
 111              	.LVL7:
 112              	.L8:
 183:Core/Src/freertos.c ****   for(;;)
 113              		.loc 1 183 3 discriminator 1 view .LVU14
 184:Core/Src/freertos.c ****   {
 185:Core/Src/freertos.c ****     osDelay(1);
 114              		.loc 1 185 5 discriminator 1 view .LVU15
 115 0006 0120     		movs	r0, #1
 116 0008 FFF7FEFF 		bl	osDelay
 117              	.LVL8:
 183:Core/Src/freertos.c ****   for(;;)
 118              		.loc 1 183 3 discriminator 1 view .LVU16
 119 000c FBE7     		b	.L8
 120              		.cfi_endproc
 121              	.LFE225:
 123              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 124              		.align	1
 125              		.global	vApplicationGetIdleTaskMemory
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 130              	vApplicationGetIdleTaskMemory:
 131              	.LVL9:
 132              	.LFB221:
  75:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 133              		.loc 1 75 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
  76:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 138              		.loc 1 76 3 view .LVU18
  76:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 139              		.loc 1 76 25 is_stmt 0 view .LVU19
 140 0000 034B     		ldr	r3, .L11
 141 0002 0360     		str	r3, [r0]
  77:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 142              		.loc 1 77 3 is_stmt 1 view .LVU20
  77:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 143              		.loc 1 77 27 is_stmt 0 view .LVU21
 144 0004 034B     		ldr	r3, .L11+4
 145 0006 0B60     		str	r3, [r1]
  78:Core/Src/freertos.c ****   /* place for user code */
 146              		.loc 1 78 3 is_stmt 1 view .LVU22
  78:Core/Src/freertos.c ****   /* place for user code */
 147              		.loc 1 78 25 is_stmt 0 view .LVU23
 148 0008 8023     		movs	r3, #128
 149 000a 1360     		str	r3, [r2]
  80:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 150              		.loc 1 80 1 view .LVU24
 151 000c 7047     		bx	lr
 152              	.L12:
 153 000e 00BF     		.align	2
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 7


 154              	.L11:
 155 0010 00000000 		.word	xIdleTaskTCBBuffer
 156 0014 00000000 		.word	xIdleStack
 157              		.cfi_endproc
 158              	.LFE221:
 160              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 161              		.align	1
 162              		.global	MX_FREERTOS_Init
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	MX_FREERTOS_Init:
 168              	.LFB222:
  88:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 169              		.loc 1 88 29 is_stmt 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 96
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 30B5     		push	{r4, r5, lr}
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 12
 176              		.cfi_offset 4, -12
 177              		.cfi_offset 5, -8
 178              		.cfi_offset 14, -4
 179 0002 99B0     		sub	sp, sp, #100
 180              	.LCFI4:
 181              		.cfi_def_cfa_offset 112
  99:Core/Src/freertos.c ****   CommSemaphoreHandle = osSemaphoreCreate(osSemaphore(CommSemaphore), 1);
 182              		.loc 1 99 3 view .LVU26
 183 0004 0025     		movs	r5, #0
 184 0006 1695     		str	r5, [sp, #88]
 185 0008 1795     		str	r5, [sp, #92]
 100:Core/Src/freertos.c **** 
 186              		.loc 1 100 3 view .LVU27
 100:Core/Src/freertos.c **** 
 187              		.loc 1 100 25 is_stmt 0 view .LVU28
 188 000a 0121     		movs	r1, #1
 189 000c 16A8     		add	r0, sp, #88
 190 000e FFF7FEFF 		bl	osSemaphoreCreate
 191              	.LVL10:
 100:Core/Src/freertos.c **** 
 192              		.loc 1 100 23 view .LVU29
 193 0012 1D4B     		ldr	r3, .L15
 194 0014 1860     		str	r0, [r3]
 116:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 195              		.loc 1 116 3 is_stmt 1 view .LVU30
 196 0016 1D4C     		ldr	r4, .L15+4
 197 0018 0DF13C0C 		add	ip, sp, #60
 198 001c A646     		mov	lr, r4
 199 001e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 200 0022 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 201 0026 9EE80700 		ldm	lr, {r0, r1, r2}
 202 002a 8CE80700 		stm	ip, {r0, r1, r2}
 117:Core/Src/freertos.c **** 
 203              		.loc 1 117 3 view .LVU31
 117:Core/Src/freertos.c **** 
 204              		.loc 1 117 23 is_stmt 0 view .LVU32
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 8


 205 002e 2946     		mov	r1, r5
 206 0030 0FA8     		add	r0, sp, #60
 207 0032 FFF7FEFF 		bl	osThreadCreate
 208              	.LVL11:
 117:Core/Src/freertos.c **** 
 209              		.loc 1 117 21 view .LVU33
 210 0036 164B     		ldr	r3, .L15+8
 211 0038 1860     		str	r0, [r3]
 120:Core/Src/freertos.c ****   CommTaskHandle = osThreadCreate(osThread(CommTask), NULL);
 212              		.loc 1 120 3 is_stmt 1 view .LVU34
 213 003a 0DF1200C 		add	ip, sp, #32
 214 003e 04F11C0E 		add	lr, r4, #28
 215 0042 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 216 0046 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 217 004a 9EE80700 		ldm	lr, {r0, r1, r2}
 218 004e 8CE80700 		stm	ip, {r0, r1, r2}
 121:Core/Src/freertos.c **** 
 219              		.loc 1 121 3 view .LVU35
 121:Core/Src/freertos.c **** 
 220              		.loc 1 121 20 is_stmt 0 view .LVU36
 221 0052 2946     		mov	r1, r5
 222 0054 08A8     		add	r0, sp, #32
 223 0056 FFF7FEFF 		bl	osThreadCreate
 224              	.LVL12:
 121:Core/Src/freertos.c **** 
 225              		.loc 1 121 18 view .LVU37
 226 005a 0E4B     		ldr	r3, .L15+12
 227 005c 1860     		str	r0, [r3]
 124:Core/Src/freertos.c ****   DriveTaskHandle = osThreadCreate(osThread(DriveTask), NULL);
 228              		.loc 1 124 3 is_stmt 1 view .LVU38
 229 005e 0DF1040E 		add	lr, sp, #4
 230 0062 04F1380C 		add	ip, r4, #56
 231 0066 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 232 006a AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 233 006e 9CE80700 		ldm	ip, {r0, r1, r2}
 234 0072 8EE80700 		stm	lr, {r0, r1, r2}
 125:Core/Src/freertos.c **** 
 235              		.loc 1 125 3 view .LVU39
 125:Core/Src/freertos.c **** 
 236              		.loc 1 125 21 is_stmt 0 view .LVU40
 237 0076 2946     		mov	r1, r5
 238 0078 01A8     		add	r0, sp, #4
 239 007a FFF7FEFF 		bl	osThreadCreate
 240              	.LVL13:
 125:Core/Src/freertos.c **** 
 241              		.loc 1 125 19 view .LVU41
 242 007e 064B     		ldr	r3, .L15+16
 243 0080 1860     		str	r0, [r3]
 131:Core/Src/freertos.c **** 
 244              		.loc 1 131 1 view .LVU42
 245 0082 19B0     		add	sp, sp, #100
 246              	.LCFI5:
 247              		.cfi_def_cfa_offset 12
 248              		@ sp needed
 249 0084 30BD     		pop	{r4, r5, pc}
 250              	.L16:
 251 0086 00BF     		.align	2
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 9


 252              	.L15:
 253 0088 00000000 		.word	CommSemaphoreHandle
 254 008c 00000000 		.word	.LANCHOR0
 255 0090 00000000 		.word	defaultTaskHandle
 256 0094 00000000 		.word	CommTaskHandle
 257 0098 00000000 		.word	DriveTaskHandle
 258              		.cfi_endproc
 259              	.LFE222:
 261              		.section	.rodata.str1.4,"aMS",%progbits,1
 262              		.align	2
 263              	.LC4:
 264 0000 44726976 		.ascii	"DriveTask\000"
 264      65546173 
 264      6B00
 265 000a 0000     		.align	2
 266              	.LC2:
 267 000c 436F6D6D 		.ascii	"CommTask\000"
 267      5461736B 
 267      00
 268 0015 000000   		.align	2
 269              	.LC0:
 270 0018 64656661 		.ascii	"defaultTask\000"
 270      756C7454 
 270      61736B00 
 271              		.section	.bss.xIdleStack,"aw",%nobits
 272              		.align	2
 275              	xIdleStack:
 276 0000 00000000 		.space	512
 276      00000000 
 276      00000000 
 276      00000000 
 276      00000000 
 277              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 278              		.align	2
 281              	xIdleTaskTCBBuffer:
 282 0000 00000000 		.space	84
 282      00000000 
 282      00000000 
 282      00000000 
 282      00000000 
 283              		.global	CommSemaphoreHandle
 284              		.section	.bss.CommSemaphoreHandle,"aw",%nobits
 285              		.align	2
 288              	CommSemaphoreHandle:
 289 0000 00000000 		.space	4
 290              		.global	DriveTaskHandle
 291              		.section	.bss.DriveTaskHandle,"aw",%nobits
 292              		.align	2
 295              	DriveTaskHandle:
 296 0000 00000000 		.space	4
 297              		.global	CommTaskHandle
 298              		.section	.bss.CommTaskHandle,"aw",%nobits
 299              		.align	2
 302              	CommTaskHandle:
 303 0000 00000000 		.space	4
 304              		.global	defaultTaskHandle
 305              		.section	.bss.defaultTaskHandle,"aw",%nobits
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 10


 306              		.align	2
 309              	defaultTaskHandle:
 310 0000 00000000 		.space	4
 311              		.section	.rodata
 312              		.align	2
 313              		.set	.LANCHOR0,. + 0
 314              	.LC6:
 315 0000 18000000 		.word	.LC0
 316 0004 00000000 		.word	StartDefaultTask
 317 0008 0000     		.short	0
 318 000a 0000     		.space	2
 319 000c 00000000 		.word	0
 320 0010 80000000 		.word	128
 321 0014 00000000 		.word	0
 322 0018 00000000 		.word	0
 323              	.LC7:
 324 001c 0C000000 		.word	.LC2
 325 0020 00000000 		.word	StartCommTask
 326 0024 FDFF     		.short	-3
 327 0026 0000     		.space	2
 328 0028 00000000 		.word	0
 329 002c 80000000 		.word	128
 330 0030 00000000 		.word	0
 331 0034 00000000 		.word	0
 332              	.LC8:
 333 0038 00000000 		.word	.LC4
 334 003c 00000000 		.word	StartDriveTask
 335 0040 FDFF     		.short	-3
 336 0042 0000     		.space	2
 337 0044 00000000 		.word	0
 338 0048 80000000 		.word	128
 339 004c 00000000 		.word	0
 340 0050 00000000 		.word	0
 341              		.text
 342              	.Letext0:
 343              		.file 2 "c:\\program files\\arm-gnu-toolchain-12.2.mpacbti-rel1-mingw-w64-i686-arm-none-eabi\\arm-
 344              		.file 3 "c:\\program files\\arm-gnu-toolchain-12.2.mpacbti-rel1-mingw-w64-i686-arm-none-eabi\\arm-
 345              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 346              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 347              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 348              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 349              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 350              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:21     .text.StartDefaultTask:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:27     .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:54     .text.StartCommTask:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:60     .text.StartCommTask:00000000 StartCommTask
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:89     .text.StartDriveTask:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:95     .text.StartDriveTask:00000000 StartDriveTask
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:124    .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:130    .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:155    .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:281    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:275    .bss.xIdleStack:00000000 xIdleStack
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:161    .text.MX_FREERTOS_Init:00000000 $t
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:167    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:253    .text.MX_FREERTOS_Init:00000088 $d
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:288    .bss.CommSemaphoreHandle:00000000 CommSemaphoreHandle
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:309    .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:302    .bss.CommTaskHandle:00000000 CommTaskHandle
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:295    .bss.DriveTaskHandle:00000000 DriveTaskHandle
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:262    .rodata.str1.4:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:272    .bss.xIdleStack:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:278    .bss.xIdleTaskTCBBuffer:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:285    .bss.CommSemaphoreHandle:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:292    .bss.DriveTaskHandle:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:299    .bss.CommTaskHandle:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:306    .bss.defaultTaskHandle:00000000 $d
C:\Users\Bgs\AppData\Local\Temp\ccCTjgtQ.s:312    .rodata:00000000 $d

UNDEFINED SYMBOLS
osDelay
ExStartCommTask
ExStartDriveTask
osSemaphoreCreate
osThreadCreate
